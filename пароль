import tkinter as tk
import random
import string

class PasswordGenerator:
    def __init__(self, master):
        self.master = master
        master.title("Генератор паролей")

        self.length_label = tk.Label(master, text="Длина пароля:")
        self.length_label.pack()

        self.length_entry = tk.Entry(master)
        self.length_entry.pack()

        self.special_characters_var = tk.BooleanVar()
        self.special_characters_check = tk.Checkbutton(master, text="Добавить специальные символы", variable=self.special_characters_var)
        self.special_characters_check.pack()

        self.numbers_var = tk.BooleanVar()
        self.numbers_check = tk.Checkbutton(master, text="Добавить числа", variable=self.numbers_var)
        self.numbers_check.pack()

        self.generate_button = tk.Button(master, text="Сгенерировать пароль", command=self.generate_password)
        self.generate_button.pack()

        self.password_label = tk.Label(master, text="Сгенерированный пароль:")
        self.password_label.pack()

        self.password_output = tk.Entry(master)
        self.password_output.pack()

    def generate_password(self):
        try:
            length = int(self.length_entry.get())
            if length <= 0:
                raise ValueError("Длина должна быть положительным числом.")

            characters = string.ascii_letters  # Буквы (верхний и нижний регистры)

            if self.special_characters_var.get():
                characters += string.punctuation  # Специальные символы

            if self.numbers_var.get():
                characters += string.digits  # Числа

            password = ''.join(random.choice(characters) for _ in range(length))
            self.password_output.delete(0, tk.END)  # Очистка предыдущего пароля
            self.password_output.insert(0, password)  # Вставка нового пароля

        except ValueError as e:
            self.password_output.delete(0, tk.END)  # Очистка предыдущего пароля
            self.password_output.insert(0, "Ошибка: " + str(e))  # Вывод ошибки

if __name__ == "__main__":
    root = tk.Tk()
    password_generator = PasswordGenerator(root)
    root.mainloop()
